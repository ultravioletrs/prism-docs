{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Prism","text":"<p>Prism is a web based SAAS that is intended for use by the end user, to allow for a user in an workspace to benefit from the entire CoCoS AI system. Prism adds a layer of security and user management to the CoCoS AI system by providing functionality such as:</p> <ul> <li>User and Consortium (workspace) creation and management</li> <li>Policy creation and management (between users, workspaces, and computations)</li> <li>Billing and payment management</li> <li>Computation creation and management</li> </ul>"},{"location":"#what-is-prism-ai","title":"What is Prism AI","text":"<p>Prism AI is a platform designed for secure, confidential AI workloads using Trusted Execution Environments (TEEs). It enables secure VM provisioning, fine-grained access control, and end-to-end encryption to ensure data privacy in collaborative AI workspaces. The platform supports various computational backends and includes logging, monitoring, and a user-friendly interface. It\u2019s particularly useful in sectors like healthcare, finance, and government for secure data processing and collaboration. More details can be found on the Prism AI page.</p> <p></p>"},{"location":"#features","title":"Features","text":"<p>Prism AI offers several key features:</p> <ol> <li>Secure VM Provisioning: Uses Trusted Execution Environments (TEEs) for secure workloads.</li> <li>Fine-Grained Access Control: Allows precise management of user and data permissions.</li> <li>End-to-End Encryption: Ensures data privacy from input to output.</li> <li>Support for Multiple Backends: Integrates with various computational backends.</li> <li>Logging and Monitoring: Provides comprehensive tracking and auditing capabilities.</li> <li>User-Friendly Interface: Simplifies complex AI workflow management.</li> </ol> <p>These features make it ideal for sensitive industries like healthcare, finance, and government. For more details, visit the Prism AI page.</p>"},{"location":"access-control/","title":"Access Control","text":"<p>Prism implements fine grained access control for users having different access to the plaform.</p>"},{"location":"access-control/#workspaces","title":"Workspaces","text":"<p>Workspaces are organizational units within the platform. They have the following user roles:</p> Role Permissions Administrator Admin, Member, Delete Member Member"},{"location":"access-control/#workspaces-permissions-explained","title":"Workspaces Permissions Explained","text":"<ul> <li>Admin: Full control over the workspace, including managing users and settings</li> <li>Member: Basic access to workspace resources</li> <li>Delete: Ability to delete the workspace</li> </ul>"},{"location":"access-control/#computations","title":"Computations","text":"<p>Computations have more complex access control with various user roles:</p> Role Permissions Administrator Owner, View, Edit, Run Viewer View Editor View, Edit Runner View, Run Dataset Provider View, Edit, Provide Data Algo Provider View, Edit, Provide Algo Result Consumer View, Edit, Consume Result"},{"location":"access-control/#computation-permissions-explained","title":"Computation Permissions Explained","text":"<ul> <li>Owner: Full control over the computation.</li> <li>View: Ability to see computation details</li> <li>Edit: Ability to modify computation settings</li> <li>Run: Ability to execute the computation</li> <li>Provide Data: Ability to input datasets for the computation</li> <li>Provide Algo: Ability to provide algorithms for the computation</li> <li>Consume Result: Ability to access and use computation results</li> </ul> <pre><code>graph TD\n    U[User] --&gt; D[Workspace]\n    U --&gt; C[Computation]\n\n    D --&gt; DA[Administrator]\n    D --&gt; DM[Member]\n\n    C --&gt; CA[Administrator]\n    C --&gt; CV[Viewer]\n    C --&gt; CE[Editor]\n    C --&gt; CR[Runner]\n    C --&gt; CDP[Dataset Provider]\n    C --&gt; CAP[Algo Provider]\n    C --&gt; CRC[Result Consumer]\n\n    DA --&gt; |Admin, Member, Delete| DP[Workspace Permissions]\n    DM --&gt; |Member| DP\n\n    CA --&gt; |Owner, View, Edit, Run| CP[Computation Permissions]\n    CV --&gt; |View| CP\n    CE --&gt; |View, Edit| CP\n    CR --&gt; |View, Run| CP\n    CDP --&gt; |View, Edit, Provide Data| CP\n    CAP --&gt; |View, Edit, Provide Algo| CP\n    CRC --&gt; |View, Edit, Consume Result| CP\n</code></pre>"},{"location":"access-control/#important-notes","title":"Important Notes","text":"<ol> <li>Workspace administrators automatically have admin permissions for computations within their workspace.</li> <li>Platform administrators have admin permissions for all workspaces on the platform.</li> <li>The access control system is designed to be flexible, allowing for fine-grained control over user permissions.</li> </ol>"},{"location":"algorithms/","title":"Algorithms","text":"<p>This demonstrates how to run algorithms using prism.</p>"},{"location":"algorithms/#running-algorithms","title":"Running algorithms","text":"<p>To run algorithms, you need to have a prism installation. You can get it from here. Also you need to have manager running. You can get it from here.</p> <p>Get familiar with running algorithms using cocos here, before continuing.</p>"},{"location":"algorithms/#python","title":"Python","text":""},{"location":"algorithms/#binary","title":"Binary","text":""},{"location":"algorithms/#wasm","title":"WASM","text":""},{"location":"algorithms/#docker","title":"Docker","text":""},{"location":"architecture/","title":"Architecture","text":"<p>Prism provides a computation management service for CoCos AI.</p>"},{"location":"architecture/#components","title":"Components","text":"Service Description Auth Manages user policies in relation to backends, certs and computations. Users Manages platform's users and auth concerns in regards to users and workspaces. Computations Manages computation lifecycle, from creation to running and monitoring. Backends Manages connections Confidential Virtual Machine creation, and connection between agent and cvms service. Certs Manages certification lifecyle (issuing, revocation, renewal) used for mTLS between backends and manager. Billing Manages payments on the platform and controls resource access based on billing plans. Invitations Manages user inivations to access workspaces. User Interface Provides an web interface to provide platform access over a visual interface."},{"location":"architecture/#users","title":"Users","text":"<p>The users service provides users access to the plaform and the user identities are used to provide authorization for the platform. Prism uses magistrala users service to achieve this.</p>"},{"location":"architecture/#computations","title":"Computations","text":"<p>The computations service give users with the appropriate authorization, the ability to create, update, delete and run computations.</p>"},{"location":"architecture/#backends","title":"Backends","text":"<p>The backends service connects to the computations service and receives run requests from computations service which it forwards to the Confidential Virtual Machines. Backends are identified by their flavors, i.e., GCP, Azure, Manager, or User created, and any VMs created on the backends are identified by their ip addresses and have certificates assigned to them for mutual TLS connections with prism.</p>"},{"location":"architecture/#certs","title":"Certs","text":"<p>This a certificate authority service that offers the ability to issue, revoke, renew certificates. It also offers an online certificate status protocal <code>OCSP</code> endpoint which is used to verify certificates used in backends service.</p>"},{"location":"architecture/#user-interface","title":"User Interface","text":"<p>This provides users with a web interface to visually access the platform. It connects to the other services using the sdk.</p>"},{"location":"assets/","title":"Computation Assets Overview","text":"<p>Computation assets on Prism provide a convenient way to manage essential computational resources including datasets and algorithms. They can also be associated with or unlinked from a computation.</p> <p>An important distinction is that computation assets contain file samples of the algorithm or dataset, providing collaborators in a computation with a guide on what the actual files will resemble. These samples are not the actual files sent to the computation manifest when uploading via the CLI. For this reason, the actual file\u2019s checksum is required during asset creation.</p> <p>A single asset can be used in multiple computations (one-to-many relationship), and a computation can be linked to several assets.</p>"},{"location":"assets/#asset-usage","title":"Asset Usage","text":""},{"location":"assets/#1-creating-a-new-asset","title":"1. Creating a New Asset","text":"<p>To create a new asset:</p> <ol> <li>Navigate to the Assets page.</li> <li>Click the New Asset button to open the asset creation modal.</li> </ol> <p></p> <p>The only mandatory fields during asset creation are:</p> <ul> <li> <p>File Checksum: The checksum of the actual file (not the sample), get more information on checksum here.</p> </li> <li> <p>Asset Description: A brief summary of what the asset represents.</p> </li> </ul> <p>The File Name field is optional. If provided, it will be verified when asset is uploaded on computation run.</p> <p></p> <p>Once created, the asset will appear in the asset list, where you can perform further actions such as downloading the asset or associating it with a computation.</p> <p></p> <p>Note: The file sample uploaded should not exceed 10 MB in size.</p>"},{"location":"assets/#2-associating-an-asset-with-a-computation","title":"2. Associating an Asset with a Computation","text":"<p>To associate an asset with a computation, the user must first be added as a provider to that computation. An algorithm provider can only link assets of type algorithm to computations where they have been added as a provider.</p> <p>Steps for association:</p> <ol> <li>Ensure the computation has been created and the user has been added to it.</li> <li>Click the Associate button on the asset.</li> <li>In the search bar, search for the computation to associate the asset with.</li> </ol> <p></p> <ol> <li>Once the correct computation is found, select it and click Associate.</li> </ol> <p></p> <p>Multiple computations can be linked to a single asset. All associated computations will be listed as pills in the computation(s) section.</p> <p>To unlink an asset from a computation, click the Unlink button next to the computation you wish to de-associate from the asset.</p>"},{"location":"assets/#3-viewing-and-downloading-asset-samples","title":"3. Viewing and Downloading Asset Samples","text":"<p>If an asset sample has been uploaded, users can either view it directly on Prism or download it for inspection later. This can be done by clicking the asset name or the View button in the assets list.</p> <p></p>"},{"location":"assets/#4-viewing-a-computations-assets","title":"4. Viewing a computation's assets","text":"<p>To view assets associated to a computation, click the Asset Management button which opens the assets page containing the computation's assets.</p> <p></p> <p>On the computation assets page, invited collabotors can view and manage all assets associated to a computation.</p> <p></p>"},{"location":"assets/#5-running-a-computation","title":"5. Running a Computation","text":"<p>Once all assets have been successfully associated with a computation, they will be listed within the computation\u2019s structure. At this point, the user is required to upload their public keys to proceed.</p> <p></p> <p>After the public keys and other necessary requirements have been provided, the computation can be executed. During execution, the computation service will retrieve the associated assets from the database and add them to the computation manifest, which is then sent to the backend.</p>"},{"location":"certs/","title":"Certs Service","text":"<p>The certs service is a certificate authority used to issue certs related to CVMs service for mutual TLS purposes. The certs service provides the ability to issue, renew, revoke and download certificates.</p>"},{"location":"certs/#issue-a-certificate","title":"Issue a Certificate","text":"<p>This is the creation of a certificate associated with a specific backend.</p> <p>This can be done on the UI on the specific backend page, by clicking on issue cert button. </p> <p>This can be done on curl using:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/certs/issue/backend/&lt;backend_id&gt; -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"ip_addresses\": []\n}\nEOF\n</code></pre> <p>example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/certs/issue/backend/fde3263e-70b8-4ce9-9f3c-4a203a0dcdf5 -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"ip_addresses\": [\"192.168.100.4\"]\n}\nEOF\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 201 Created\nContent-Type: application/json\nDate: Thu, 02 May 2024 11:35:37 GMT\nContent-Length: 59\n\n{\"serial_number\":\"75709155906162784911683514578929321876\"}\n</code></pre>"},{"location":"certs/#download-a-certificate","title":"Download a Certificate","text":"<p>This is a two step process. First we'll obtain a short lived token. Then using this token we'll be able to download the zip file containing the associated cert.</p> <p>First we'll request a download token:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/certs/&lt;serial_number&gt;/download/token -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDate: Thu, 02 May 2024 11:46:11 GMT\nContent-Length: 164\n\n{\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTQ2NTA2NzEsImlzcyI6IlVsdHJhdmlvbGV0Iiwic3ViIjoiY2VydHMifQ.4njH2KAz-qxzuaFkVx3WLQNuRTUdoKBTvlbG11oM7Yg\"}\n</code></pre> <p>With the token we can then download the cert. Please note that the token is short lived and must be used before expiry.</p> <pre><code>curl -L -X GET https://prism.ultraviolet.rs/certs/&lt;serial_number&gt;/download -G -d \"token=&lt;download_token&gt;\" --output &lt;filename&gt;.zip\n</code></pre> <p>example:</p> <pre><code>curl -L -X GET https://prism.ultraviolet.rs/certs/75709155906162784911683514578929321876/download -G -d \"token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTQ2NTIzMTYsImlzcyI6IlVsdHJhdmlvbGV0Iiwic3ViIjoiY2VydHMifQ.lvFgVSKAyn2UNeJg1OA4fGxDDZ6pylZTn9UZhrfWR9I\" --output certs.zip\n</code></pre> <p>On the UI we'll click on request download button, followed by download certs to obtain the certs.</p> <p></p> <p></p> <p>This results in three files <code>ca.pem</code>, <code>cert.pem</code> and <code>key.pem</code> which we'll use with CoCo's manager to bring the backend online.</p>"},{"location":"certs/#renew-certificate","title":"Renew Certificate","text":"<p>Certificates can be renewed before they expire. This will move their expiry date to a future one.</p> <p></p> <pre><code>curl -sSiX PATCH https://prism.ultraviolet.rs/certs/&lt;serial_number&gt;/renew -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 03 May 2024 13:32:31 GMT\nContent-Length: 0\n</code></pre>"},{"location":"certs/#revoke-certificate","title":"Revoke Certificate","text":"<p>Certificates can be revoked, which means they can no longer be used for connecting to CVMs service. Revoked certificates cannot be renewed.</p> <p></p> <pre><code>curl -sSiX PATCH https://prism.ultraviolet.rs/certs/&lt;serial_number&gt;/revoke -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 03 May 2024 13:33:29 GMT\nContent-Length: 0\n</code></pre>"},{"location":"certs/#list-certificates","title":"List Certificates","text":"<pre><code>curl -sSiX GET https://prism.ultraviolet.rs/certs -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 03 May 2024 13:37:04 GMT\nContent-Length: 269\n\n{\"certificates\":[{\"SerialNumber\":\"26722427430573939575087739124584835231\",\"Certificate\":null,\"Key\":null,\"Revoked\":true,\"ExpiryDate\":\"2024-05-03T13:33:29.405109Z\",\"EntityType\":\"\",\"EntityID\":\"ca219243-0dd4-4e6e-94ad-54fbf3dd8b32\",\"DownloadUrl\":\"\"}],\"total\":1,\"limit\":10}\n</code></pre>"},{"location":"certs/#online-certificate-status-protocal","title":"Online Certificate Status Protocal","text":"<p>The certs service also provides an endpoint on <code>prism.ultraviolet.rs/certs/ocsp</code> which allows verification of certificates issued by this service.</p>"},{"location":"computation-logs/","title":"Computation Logging and Monitoring","text":"<p>Monitoring and reviewing logs and events is crucial for understanding the flow, tracking performance, and diagnosing potential issues during a computation run.</p> <p>Once a computation is successfully running, comprehensive logs and events are continuously updated in the UI. The Timeline and Logs tabs offer distinct perspectives: the Timeline provides a structured sequence of events, while the Logs tab offers in-depth logs from components like QEMU, Agent, and Manager. Together, these views provide essential insights into each stage of a computation's lifecycle.</p> <p>A robust filtering system in the UI further enhances the monitoring experience, allowing you to narrow down to specific logs or events. This makes it easier to investigate issues or closely examine detailed stages within the computation.</p>"},{"location":"computation-logs/#viewing-logs","title":"Viewing Logs","text":""},{"location":"computation-logs/#1-running-a-computation-to-view-logs-and-events","title":"1. Running a Computation to View logs and Events","text":"<p>To access the logs and events associated with a computation, you must first successfully execute a computation. Detailed steps for creating a computation, uploading necessary assets, and managing public keys are available in computations and events docs.</p> <p>To run a computation, start by navigating to the Computations page, where you will see a list of available computations. Select the computation you want to execute.  This action will direct you to the computation details page, as shown below:  Once selected, click on the \"Run Computation\" button, which initiates the computation process.</p>"},{"location":"computation-logs/#2-viewing-computation-logs-and-events","title":"2. Viewing Computation Logs and Events","text":"<p>After successfully running a computation, the logs and events will populate in the \"Timeline\" and \"Logs\" sections on the computation page. These sections allow you to switch between detailed computation events and logs.</p> <p>To view these logs and events:</p> <ol> <li> <p>Timeline Tab:</p> </li> <li> <p>This tab outlines the sequence of events for the computation, from the initial setup (such as VM provisioning) to completion, including downloading the computation results.</p> </li> <li>The timeline view provides an organized, event-by-event account of the computation\u2019s progression.</li> </ol> <p></p> <ol> <li>Logs Tab:</li> <li>This tab contains the detailed logs generated during the computation run.</li> <li>Logs are segmented from various sources, including QEMU, Agent, and Manager logs.</li> <li>Each source log offers insights into the specific processes and stages within the computation.</li> </ol> <p></p>"},{"location":"computation-logs/#3-filtering-computation-logs-and-events","title":"3. Filtering Computation Logs and Events","text":"<p>To streamline navigation and analysis, the UI includes a filtering feature, allowing you to filter logs and events by various criteria. This feature makes it easier to follow the sequence of events in a computation or identify specific areas when debugging issues.</p> <p>Using the Filter Feature:</p> <ol> <li> <p>Click on the filter (funnel) icon located in the logs/events section to open the filter modal.</p> </li> <li> <p>In the modal, you\u2019ll find options to refine your view:</p> </li> <li> <p>Date Filter: Specify a date range to focus on logs and events from a specific period.</p> </li> <li>Log Level Filter: Filter by log level (e.g., error, warning, info) to see logs of a specific severity.</li> <li>Run: Filter by run id to see logs and events of a specific computation run.</li> <li>No. of Entries: Filter number of entries to specify number of logs and events displayed per page.</li> <li>Each filter selection refines the logs/events displayed to only show relevant data based on the chosen criteria.</li> </ol> <p> </p> <ol> <li> <p>Click Apply to apply your selected filters to the logs/events view. To reset the filters back to their default state and show all logs/events, click the Reset button.</p> </li> <li> <p>Navigating through Logs and Events Pages:</p> </li> <li>The logs and events are paginated to improve readability and ease of navigation.</li> <li>To scroll through the log entries, use the Next and Previous buttons.</li> <li>Each button allows you to move one page forward or backward through the logs, respectively, making it easier to locate specific entries without overwhelming the display.</li> </ol> <p></p>"},{"location":"computations/","title":"Computations","text":"<p>The computations service provides a means to manage computations, with functions such as computation creation, update, deletion, and running.</p>"},{"location":"computations/#add-computation","title":"Add Computation","text":"<p>In order to create computation, we can to provide the following content:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/computations -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"&lt;name&gt;\",\n  \"description\": \"&lt;description&gt;\",\n  \"backend_id\": &lt;backend_id\"\n  ]\n}\nEOF\n</code></pre> <p>On the ui this can be done on this page as shown here </p> <p>Example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/computations -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"Machine Diagnostics Analysis\",\n  \"description\": \"Performing diagnostics analysis on machine data\",\n  \"backend_id\": \"fde3263e-70b8-4ce9-9f3c-4a203a0dcdf5\",\n  \"agent_config\": {\n    \"log_level\": \"debug\"\n  }\n}\nEOF\n</code></pre> <p>Response:</p> <pre><code>HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: /computations/240be921-5758-4ffa-9ed3-97e6e72e97ea\nDate: Thu, 02 May 2024 14:29:22 GMT\nContent-Length: 0\n</code></pre>"},{"location":"computations/#agent-configuration","title":"Agent Configuration","text":"<p>The Agent Config feature allows users to configure TLS (Transport Layer Security) settings and logging levels for computational agents. This configuration is accessible through the Agent Config modal in the New Computation interface.</p>"},{"location":"computations/#tls-configuration-options","title":"TLS Configuration Options","text":"<p>The system supports four TLS configuration modes:</p> <ol> <li> <p>Attested TLS</p> </li> <li> <p>Basic TLS configuration with attestation verification during the TLS handshake.</p> </li> <li>No additional certificate or key files required.</li> <li> <p>Suitable for environments requiring basic secure communication.</p> </li> <li> <p>Mutual TLS</p> </li> <li> <p>Requires bi-directional authentication</p> </li> <li>Required files:<ul> <li>Key File</li> <li>Certificate File</li> <li>Server CA File</li> <li>Client CA File</li> </ul> </li> <li> <p>Provides highest level of security with mutual authentication</p> </li> <li> <p>TLS</p> </li> <li> <p>Standard TLS configuration</p> </li> <li>Required files:<ul> <li>Key File</li> <li>Certificate File</li> </ul> </li> <li> <p>Suitable for environments requiring encrypted communication without mutual authentication</p> </li> <li> <p>No TLS</p> </li> <li> <p>Disables TLS security</p> </li> <li>No additional configuration required</li> <li>Should only be used in secure, isolated environments</li> <li>Not recommended for production deployments</li> </ol>"},{"location":"computations/#log-level-configuration","title":"Log Level Configuration","text":"<ul> <li> <p>Info: Standard logging level for general operational information</p> </li> <li> <p>Logs important events and milestones</p> </li> <li>Recommended for normal operation</li> <li> <p>Provides good balance of information without excessive detail</p> </li> <li> <p>Debug: Detailed logging for troubleshooting</p> </li> <li> <p>Includes extensive operation details</p> </li> <li>Useful during development and debugging</li> <li> <p>May impact performance</p> </li> <li> <p>Warn: Warning-level messages only</p> </li> <li> <p>Logs potentially harmful situations</p> </li> <li>Does not log normal operational information</li> <li> <p>Useful for monitoring potential issues</p> </li> <li> <p>Error: Critical issues only</p> </li> <li>Logs only error conditions</li> <li>May miss important operational information</li> </ul>"},{"location":"computations/#best-practices-for-log-levels","title":"Best practices for log levels","text":"<ul> <li>Use Info for normal operations</li> <li>Enable Debug temporarily for troubleshooting</li> <li>Use Error only when minimal logging is required</li> </ul>"},{"location":"computations/#file-requirements","title":"File Requirements","text":""},{"location":"computations/#key-file","title":"Key File","text":"<ul> <li>Required for: Mutual TLS, TLS</li> <li>Format: PEM-encoded private key</li> <li>Purpose: Authentication of the agent</li> </ul>"},{"location":"computations/#certificate-file","title":"Certificate File","text":"<ul> <li>Required for: Mutual TLS, TLS</li> <li>Format: PEM-encoded certificate</li> <li>Purpose: Identity verification of the agent</li> </ul>"},{"location":"computations/#server-ca-file","title":"Server CA File","text":"<ul> <li>Required for: Mutual TLS only</li> <li>Format: PEM-encoded CA certificate</li> <li>Purpose: Verification of server certificates</li> </ul>"},{"location":"computations/#client-ca-file","title":"Client CA File","text":"<ul> <li>Required for: Mutual TLS only</li> <li>Format: PEM-encoded CA certificate</li> <li>Purpose: Verification of client certificates</li> </ul>"},{"location":"computations/#implementation-steps","title":"Implementation Steps","text":"<ol> <li>Access the Agent Config modal through the \"Enter Agent Config\" button on create/update computation page.</li> <li>Select appropriate TLS Configuration mode</li> <li>Set desired Log Level based on operational requirements</li> <li>For Mutual TLS or TLS modes:</li> <li>Upload required certificate and key files</li> <li>Verify file formats and permissions</li> <li>Click \"Close\" to save configuration</li> </ol>"},{"location":"computations/#troubleshooting","title":"Troubleshooting","text":"<p>Common issues and solutions:</p>"},{"location":"computations/#certificate-issues","title":"Certificate Issues","text":"<ul> <li>Verify certificate chain validity</li> <li>Check certificate expiration dates</li> <li>Ensure proper file permissions</li> </ul>"},{"location":"computations/#connection-problems","title":"Connection Problems","text":"<ul> <li>Verify all required files are properly uploaded</li> <li>Check network connectivity</li> <li>Confirm firewall rules allow TLS traffic</li> <li>Restart the computation</li> </ul>"},{"location":"computations/#authentication-failures","title":"Authentication Failures","text":"<ul> <li>Verify certificate-key pairs match</li> <li>Check CA trust chain</li> <li>Confirm client/server certificate compatibility</li> </ul>"},{"location":"computations/#example-attestated-tls-configuration","title":"Example: Attestated TLS configuration","text":"<p>Agent can be configured to run with attested TLS.</p> <ol> <li>Set agent tls configuration to aTLS.     Click on close to save config and click the update/create button to save the computation.</li> <li>To confirm aTLS was configured, click on the update computation button.    </li> <li>Next Run the computation and wait for the virtual machine provisioning to be complete.    </li> <li> <p>Download the attestation policy. This file is used to set the expected values in the attestation report and is required for validation.     </p> </li> <li> <p>Finally to connect to agent, we need to configure the env variables on cli.</p> </li> </ol> <pre><code>export AGENT_GRPC_URL=&lt;backend_host&gt;:&lt;agent_port&gt;\nexport AGENT_GRPC_ATTESTED_TLS=true\nexport AGENT_GRPC_ATTESTATION_POLICY=&lt;path_to_attestation_policy_file&gt;\n</code></pre> <p>after this configuration you can connect to agent normally using cli and perform operations on cli such as algo/data upload etc.</p>"},{"location":"computations/#calculating-measurement-manually-optional","title":"Calculating measurement manually (optional)","text":"<p>Optionally, you can calculate and confirm the measurement in the attestation report. You'll need the kernel and rootfs file which can be downloaded from cocos releases based on versions.</p> <p></p> <p>to calculate the expected measurement:</p> <pre><code>OVMF_CODE=/home/cocosai/danko/test/ovmf/OVMF.fd\nINITRD=\"/home/sammy/rootfs.cpio.gz\"\nKERNEL=\"/home/sammy/bzImage\"\nLINE='\"quiet console=null rootfstype=ramfs\"'\n./build/cocos-cli sevsnpmeasure --mode snp --vcpus 4 --vcpu-type EPYC-v4 --ovmf $OVMF_CODE --kernel $KERNEL --initrd $INITRD --append \"$LINE\"\n</code></pre> <p>Once calculated this can be replaced on the attestation policy file using:</p> <pre><code>./build/cocos-cli backend measurement &lt;base64-string-of-measurement&gt; &lt;attestation_policy.json file&gt;\n</code></pre>"},{"location":"computations/#calculating-the-host-data-optional","title":"Calculating the host-data (Optional)","text":"<p>The host data set on the virtual machine is based on the computation mmanifest. The manifest should be downloaded from the computation page. Click on preview manifest and then download the manifest for the specific computation run.</p> <p></p> <p>The host data value us calculated using the cli as below:</p> <pre><code>./build/cocos-cli checksum &lt;path-to-manifest-json-file&gt; --manifest -b\n</code></pre> <p>This can also be edited into the downloaded attestation policy as below:</p> <pre><code>./build/cocos-cli backend hostdata &lt;base64-string-of-measurement&gt; &lt;attestation_policy.json file&gt;\n</code></pre>"},{"location":"computations/#example-mtls-and-tls-configuration","title":"Example:  mTLS and TLS configuration","text":"<p>To ensure secure communications, prevent unauthorized access, data interception, and man-in-the-middle (MITM) attacks in Prism and COCOS Transport Layer Security (TLS) and Mutual TLS (mTLS) features can be enabled as described above. TLS/ mTLS configurations ensures that:</p> <ul> <li>Algorithms and Datasets uploaded to Agent and Results downloaded from agent through the CLI remains private.</li> <li>The integrity of data is preserved (i.e., no tampering).</li> <li>The Agent's identity is verified through a server certificate either issued by a trusted Certificate Authority (CA) or self-signed</li> </ul> <p>For TLS connection:</p> <ol> <li>The CLI connects to the Agent.</li> <li>Agent shows its certificate to the CLI.</li> <li>CLI verifies that certificate.</li> <li>CLI sends data to the Agent in an encrypted communication channel.</li> </ol> <p></p> <p>For MTLS connection:</p> <ol> <li>CLI connects to the Agent.</li> <li>Agent shows its certificate to the CLI.</li> <li>CLI verifies that certificate.</li> <li>CLI shows its certificate to the Agent.</li> <li>Agent verifies that certificate and allows the CLI to send requests.</li> <li>CLI sends data to the Agent in an encrypted communication channel.</li> </ol> <p></p> <p>To generate your own certificates for configuring either of the modes:</p> <pre><code>CLIENT_ORG_UNIT=\"example_prism_cli\"\nSERVER_ORG_UNIT=\"example_prism_agent\"\nWORK_DIR=\"\"\n\n# 1. Generate CA's private key and self-signed certificate\nopenssl req -x509 -sha256 -newkey rsa:4096 -days 365 -nodes -keyout  \"$WORK_DIR/ca-key.pem\" -out \"$WORK_DIR/ca-cert.pem\" -subj \"/CN=Example_Selfsigned_ca/O=ExampleOrg/OU=example_ca/emailAddress=info@example.com\"\n\necho \"CA's self-signed certificate\"\nopenssl x509 -in \"$WORK_DIR/ca-cert.pem\" -noout -text\n\n# 2. Generate server's private key and certificate signing request (CSR)\nopenssl req -newkey rsa:4096  -sha256 -nodes -keyout  \"$WORK_DIR/server-key.pem\" -out  \"$WORK_DIR/server-req.pem\" -subj \"/CN=Example_Selfsigned/O=ExampleOrg/OU=$SERVER_ORG_UNIT/emailAddress=info@example.com\"\n\n# 3. Use CA's private key to sign web server's CSR and get back the signed certificate\nopenssl x509 -req -in \"$WORK_DIR/server-req.pem\" -days 365 -CA \"$WORK_DIR/ca-cert.pem\" -CAkey  \"$WORK_DIR/ca-key.pem\" -CAcreateserial -out  \"$WORK_DIR/server-cert.pem\" -extfile \"$WORK_DIR/ext/server-ext.cnf\" -extensions v3_req\n\necho \"Server's signed certificate\"\nopenssl x509 -in \"$WORK_DIR/server-cert.pem\" -noout -text\n\n# For mTLS\n# 4. Generate client's private key and certificate signing request (CSR)\nopenssl req -newkey rsa:4096 -sha256 -nodes -keyout \"$WORK_DIR/client-key.pem\" -out \"$WORK_DIR/client-req.pem\" -subj \"/CN=Example_Selfsigned/O=ExampleOrg/OU=$CLIENT_ORG_UNIT/emailAddress=info@example.com\"\n\n# 5. Use CA's private key to sign client's CSR and get back the signed certificate\nopenssl x509 -req -in \"$WORK_DIR/client-req.pem\" -days 365 -CA \"$WORK_DIR/ca-cert.pem\" -CAkey \"$WORK_DIR/ca-key.pem\" -CAcreateserial -out \"$WORK_DIR/client-cert.pem\" -extfile \"$WORK_DIR/ext/client-ext.cnf\" -extensions v3_req\n\necho \"Client's signed certificate\"\nopenssl x509 -in \"$WORK_DIR/client-cert.pem\" -noout -text\n</code></pre> <p>Example extension file:</p> <pre><code>[req]\nreq_extensions = v3_req\ndistinguished_name = req_distinguished_name\n\n[req_distinguished_name]\n\n[v3_req]\nbasicConstraints = CA:FALSE\nkeyUsage = nonRepudiation, digitalSignature, keyEncipherment\nsubjectAltName = @alt_names\n\n[alt_names]\nDNS.1 = localhost\nDNS.2 = &lt;agent host name&gt;\n\n# IP addresses\nIP.1 = &lt;agent host ip&gt;\n</code></pre> <p>To configure TLS for agent on the ui:</p> <ol> <li>Access the Agent Config modal through the \"Enter Agent Config\" button on create/update computation page.</li> <li>Select the TLS option from the TLS Configuration drop down.</li> </ol> <p></p> <p>To configure mTLS for agent on the ui:</p> <ol> <li>Access the Agent Config modal through the \"Enter Agent Config\" button on create/update computation page.</li> <li>Select the mTLS option from the TLS Configuration drop down.</li> </ol> <p></p> <p>To connect cli to agent, we need to configure the env variables on cli.</p> <p>For mTLS:</p> <pre><code>\nexport AGENT_GRPC_URL=&lt;backend_host&gt;:&lt;agent_port&gt;\nexport AGENT_GRPC_CLIENT_CERT=&lt;path_to_generated_client_cert&gt;\nexport AGENT_GRPC_CLIENT_KEY=&lt;path_to_generated_client_key&gt;\nexport AGENT_GRPC_SERVER_CA_CERTS=&lt;path_to_generated_server_ca_cert&gt;\n</code></pre> <p>For TLS:</p> <pre><code>export AGENT_GRPC_URL=&lt;backend_host&gt;:&lt;agent_port&gt;\nexport AGENT_GRPC_SERVER_CA_CERTS=&lt;path_to_generated_server_ca_cert&gt;\n</code></pre> <p>After this configuration you can connect to agent normally using cli and perform operations on cli such as algo/data upload etc.</p> <p>It is important to note that the Agent is the server and cli the client. Therefore, upload server generated cert, key on the UI as shown above and configure certificates generated for client on CLI.</p>"},{"location":"computations/#retrieve-computations","title":"Retrieve Computations","text":"<p>In order to get all computations:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/computations -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>Example:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/computations -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>Response:</p> <pre><code>HTTP/2 200\ncontent-type: application/json\ndate: Mon, 27 May 2024 11:37:50 GMT\nx-frame-options: DENY\nx-xss-protection: 1; mode=block\ncontent-length: 433\n\n{\"computations\":[{\"id\":\"f025d311-193a-469b-b504-f137e0b768c2\",\"name\":\"name 1\",\"status\":\"executable\",\"owner\":\"e20aaa5a-95d7-444a-8471-51c67082adbf\",\"start_time\":\"2024-05-27T11:36:42.99242Z\",\"end_time\":\"0001-01-01T00:00:00Z\",\"algorithm\":{},\"agent_config\":{\"log_level\":\"\",\"cert_file\":\"\",\"server_key\":\"\",\"server_ca_file\":\"\",\"client_ca_file\":\"\",\"attested_tls\":false},\"agent_port\":\"\",\"backend_id\":\"cbaf711f-a086-48e0-bea1-a53a9650ba9c\"}]}\n</code></pre> <p>On the UI the listed computations appear so: </p>"},{"location":"computations/#retrieve-computation-information","title":"Retrieve Computation Information","text":"<p>In order to get one specific computation, by ID:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/computations/&lt;computation_id&gt; -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>Example:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/computations/f025d311-193a-469b-b504-f137e0b768c2 -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>Response:</p> <pre><code>HTTP/2 200\ncontent-type: application/json\ndate: Mon, 27 May 2024 11:39:22 GMT\nx-frame-options: DENY\nx-xss-protection: 1; mode=block\ncontent-length: 414\n\n{\"id\":\"f025d311-193a-469b-b504-f137e0b768c2\",\"name\":\"name 1\",\"status\":\"executable\",\"owner\":\"e20aaa5a-95d7-444a-8471-51c67082adbf\",\"start_time\":\"2024-05-27T11:36:42.99242Z\",\"end_time\":\"0001-01-01T00:00:00Z\",\"algorithm\":{},\"agent_config\":{\"log_level\":\"\",\"cert_file\":\"\",\"server_key\":\"\",\"server_ca_file\":\"\",\"client_ca_file\":\"\",\"attested_tls\":false},\"agent_port\":\"\",\"backend_id\":\"cbaf711f-a086-48e0-bea1-a53a9650ba9c\"}\n</code></pre> <p>The view computation page appears as below, it also contains buttons to edit, run, delete and view computation logs and events. </p>"},{"location":"computations/#update-computations-information","title":"Update Computations Information","text":"<p>In order to update computation:</p> <pre><code>curl -sSiX PUT https://prism.ultraviolet.rs/computations/&lt;computation_id&gt; -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt;EOF\n{\n  \"name\": \"[computation_name]\",\n  \"description\": \"[computation_description]\",\n  \"datasets\": [\"[dataset_1]\", \"[dataset_2]\", \"[dataset_3]\"],\n  \"algorithm\": [\"[algorithm_1]\", \"[algorithm_2]\", \"[algorithm_3]\"],\n}\nEOF\n</code></pre> <p>Example:</p> <pre><code>curl -sSiX PUT https://prism.ultraviolet.rs/computations/8b131663-058d-4e8f-8ccb-cc83c3f9e694 -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt;EOF\n{\n  \"name\": \"CNC Machine Diagnostics Analysis\",\n  \"description\": \"Performing diagnostics analysis on CNC machine data\",\n  \"result_consumers\": [\n    \"3ed2a2ad-8251-484c-a39b-bdb82f122f67\",\n    \"622d4b11-1b06-426e-baf6-e80d7025f961\"\n  ]\n}\nEOF\n</code></pre> <p>Response:</p> <pre><code>HTTP/2 200\ncontent-type: application/json\ndate: Mon, 27 May 2024 11:51:25 GMT\nx-frame-options: DENY\nx-xss-protection: 1; mode=block\ncontent-length: 0\n</code></pre> <p>The update computation page appears as below: </p>"},{"location":"computations/#computation-export-and-import","title":"Computation export and import","text":"<p>Prism allows users to export and import computations in both JSON and CSV formats. When exporting as JSON, all details of a computation are bundled into a single file, which can later be imported to recreate the computation with the provided data. Alternatively, multiple computations can be uploaded using a CSV file, which contains the relevant details for each computation. You can find a sample CSV file in the Prism repository here. When importing computations, ensure that all user IDs included in the file are valid and correspond to registered users in the workspace, including both backend and user IDs.</p> <p>A sample computation that can be uploaded as json is shown:</p> <pre><code>{\n  \"id\": \"185e61f4-2fd1-47c3-b8e7-1bf6a8466b79\",\n  \"name\": \"sample_computation\",\n  \"description\": \"sample\",\n  \"owner\": \"f07b7716-2737-4228-9d80-d9df4ab5ee53\",\n  \"start_time\": \"0001-01-01T00:00:00Z\",\n  \"datasets\": [\n    {\n      \"provider\": \"f07b7716-2737-4228-9d80-d9df4ab5ee53\",\n      \"hash\": \"171ae99ff0449d52cd37f824eec20f56d4efbe322e022e1df02a89eabc16209c\"\n    },\n    {\n      \"provider\": \"f07b7716-2737-4228-9d80-d9df4ab5ee53\",\n      \"hash\": \"3b8aea5a74d179a445e86ce23d2fc24c8cd65d34f19798cb8852a7bcf945b2ae\"\n    },\n    {\n      \"provider\": \"f07b7716-2737-4228-9d80-d9df4ab5ee53\",\n      \"hash\": \"64a6eb1ed400d9b8139d64ef21641e0a930cda8008e21d2b055f1ae91a2c710a\"\n    }\n  ],\n  \"algorithm\": {\n    \"provider\": \"f07b7716-2737-4228-9d80-d9df4ab5ee53\",\n    \"hash\": \"9567a45920974a3261f9e897b3da7e49a391728f607f36f0ad6e8f5ec8a2041b\"\n  },\n  \"result_consumers\": [\"f07b7716-2737-4228-9d80-d9df4ab5ee53\"],\n  \"agent_config\": {\n    \"log_level\": \"debug\",\n    \"cert_file\": \"\",\n    \"server_key\": \"\",\n    \"server_ca_file\": \"\",\n    \"client_ca_file\": \"\",\n    \"attested_tls\": false\n  },\n  \"backend_id\": \"9a8d67b6-9298-4393-81c6-8b7958a8cebf\"\n}\n</code></pre> <p>Upload of computations can be done on the computations page, the files accepted are json and csv.</p> <p></p> <p>Any computation can be downloaded by clicking the download button when you view the desired computation.</p> <p></p>"},{"location":"computations/#run-computation","title":"Run Computation","text":"<p>In order to get one specific computation, by ID:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/computations/&lt;computation_id&gt;/run -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>Example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/computations/8b131663-058d-4e8f-8ccb-cc83c3f9e694/run -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>Response:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 03 May 2024 08:37:24 GMT\nContent-Length: 0\n</code></pre>"},{"location":"computations/#remove-a-computation","title":"Remove a Computation","text":"<p>In order to delete computation:</p> <pre><code>curl -sSiX DELETE \"https://prism.ultraviolet.rs/computations/&lt;computation_id&gt;\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>Example:</p> <pre><code>curl -sSiX DELETE \"https://prism.ultraviolet.rs/computations/8b131663-058d-4e8f-8ccb-cc83c3f9e694\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>Response:</p> <pre><code>HTTP/1.1 204 No Content\nContent-Type: application/json\nDate: Thu, 10 Aug 2023 07:34:17 GMT\nX-Frame-Options: DENY\nX-Xss-Protection: 1; mode=block\n</code></pre>"},{"location":"computations/#user-keys","title":"User Keys","text":"<p>Cocos implements a public-key cryptography system for user authentication and role management in its multiparty confidential computing platform. Each user requires only a single public-private key pair per computation, regardless of how many roles they hold in that computation. Private keys are used for command-line operations.</p> <p>Cocos supports three types of cryptographic keys:</p> <ul> <li>RSA</li> <li>ECDSA</li> <li>Ed25519</li> </ul>"},{"location":"computations/#key-usage-workflow","title":"Key Usage Workflow","text":""},{"location":"computations/#registration-phase","title":"Registration Phase","text":"<ul> <li>User generates one public-private key pair</li> <li>User provides their public key when being assigned to the computation   </li> <li>System associates the public key with all of the user's designated roles</li> </ul>"},{"location":"computations/#operation-phase","title":"Operation Phase","text":"<p>Users use the same private key for all CLI operations, regardless of role:</p> <ul> <li>Algorithm uploads</li> <li>Data uploads</li> <li>Result retrieval</li> </ul>"},{"location":"computations/#security-considerations","title":"Security Considerations","text":""},{"location":"computations/#private-key-handling","title":"Private Key Handling","text":"<ul> <li>Private keys should never be shared</li> <li>Private keys should be stored securely</li> <li>Private keys are only used locally with CLI operations</li> <li>One private key is sufficient for all roles in a computation</li> </ul>"},{"location":"computations/#public-key-distribution","title":"Public Key Distribution","text":"<ul> <li>Public keys are safe to share and can be viewed in the manifest   </li> <li>Public key must be registered once before participation</li> <li>Same public key is used for all roles in the computation</li> </ul>"},{"location":"computations/#best-practices","title":"Best Practices","text":"<ul> <li>Keep private keys secure and backed up</li> <li>Register public key once before beginning computation participation</li> <li>Verify all role assignments are associated with your single key pair by viewing the manifest</li> <li>Consider using separate key pairs for different workspaces and computations</li> </ul>"},{"location":"cvms/","title":"Confidential Virtual Machines (CVMs)","text":""},{"location":"cvms/#overview","title":"Overview","text":"<p>Confidential Virtual Machines (CVMs) provide a secure environment for running computations while ensuring data confidentiality. CVMs are available in multiple configurations, allowing users to select a flavor that best suits their needs. The currently supported flavors include:</p> <ul> <li>GCP: Confidential Virtual Machines hosted on Google Cloud Platform.</li> <li>Azure: Confidential Virtual Machines deployed on Microsoft Azure.</li> <li>Manager: Confidential Virtual Machines running on our dedicated cloud infrastructure.</li> </ul> <p>Before computations can be executed, a CVM must be created and properly configured. Once set up, it can be selected for running workloads securely.</p>"},{"location":"cvms/#confidential-computing-virtual-machines-cvm-configurations","title":"Confidential Computing Virtual Machines (CVM) Configurations","text":"<ul> <li> <p>GCP CVMs run on the N2D machine series, powered by AMD EPYC Milan processors with up to 224 vCPUs and 896 GB RAM. These instances leverage SEV-SNP for memory encryption, ensuring data remains confidential even from the hypervisor. They support persistent and local SSD storage, but GPUs and nested virtualization are not available. GCP CVMs offer Secure Boot, vTPM, and integrity monitoring, enhancing firmware security and trusted execution. They run Ubuntu 22.04 LTS and can be provisioned using cloud-init for automated configuration. The VMs require on-host maintenance termination, ensuring workloads remain secure during infrastructure updates.</p> </li> <li> <p>Azure CVMs utilize the DCasv5 series, featuring AMD EPYC 7763v (Milan) processors with up to 96 vCPUs and 384 GB RAM. These machines incorporate SEV-SNP for full memory encryption and hardware-isolated execution. They support Premium SSD storage but lack local disks, making them ideal for workloads requiring strict security without temporary storage dependencies. Azure CVMs also include vTPM and Secure Boot, enhancing firmware integrity and trusted execution. The VMs run Canonical's Ubuntu Confidential VM (20.04 LTS) and can be provisioned using cloud-init for automated configuration.</p> </li> <li> <p>Manager spawns QEMU-based secure virtual machines (SVMs) configured for confidential computing and built using Buildroot. It runs on a Q35 machine type with an AMD EPYC CPU, supporting 8 vCPUs (scalable up to 64) and 16 GB RAM (maximum 30 GB). The VM uses AMD SEV-SNP for full memory encryption and is booted with Open Virtual Machine Firmware (OVMF) for UEFI. It runs focal-server-cloudimg-amd64 and leverages a RAM-only architecture based on Linux kernel v6.12 with an initramfs root file system, ensuring that secrets stored in memory are destroyed upon shutdown.</p> </li> <li> <p>Manager integrates a Hardware Abstraction Layer (HAL) with AMD SEV-SNP to create fully encrypted VMs that can be verified using remote attestation. SEV-SNP protects the entire VM, while HAL eliminates the need for a full OS by providing a lightweight execution environment that abstracts hardware complexities.</p> </li> <li> <p>During boot, Manager ensures system integrity using remote attestation. The AMD Secure Processor (AMD SP) measures the VM\u2019s contents and includes the hash in the attestation report. Since SEV alone only measures the OVMF firmware, Manager extends attestation by embedding hashes of vmlinuz and initramfs inside OVMF. At boot, OVMF verifies these hashes before loading the kernel and file system into memory, ensuring that only the expected and trusted software stack executes.</p> </li> <li> <p>Manager includes a virtual TPM (vTPM) within the CVM, measured and attested by AMD SEV-SNP. After boot, the vTPM functions as a standard TPM, measuring the boot process, including the kernel and initial file system, to ensure system integrity.</p> </li> <li> <p>More information on manager can be found on manager docs.</p> </li> </ul>"},{"location":"cvms/#creating-a-cvm","title":"Creating a CVM","text":"<p>To create a CVM, follow these steps:</p> <ol> <li> <p>Navigate to the CVMs Section:</p> </li> <li> <p>From the dashboard, click on the CVMs tab to access the CVM management page.</p> </li> </ol> <p></p> <ol> <li> <p>Initiate CVM Creation:</p> </li> <li> <p>Click the Create CVM button to begin the setup process.</p> </li> </ol> <p></p> <ol> <li> <p>Select Configuration Options:</p> </li> <li> <p>From the dropdown menu, choose the desired CVM flavor (GCP, Azure, or Manager).</p> </li> <li>Specify the amount of RAM (required for Azure and GCP CVMs).</li> <li>Define the vCPU count (configurable for Azure and GCP CVMs only).</li> </ol> <p></p> <ol> <li> <p>CVM Provisioning:</p> </li> <li> <p>After submitting the configuration, the CVM creation process will begin. This may take a few minutes.</p> </li> <li>Once created, the CVM will appear in the list with its unique ID, URL, and status.</li> </ol> <p></p>"},{"location":"cvms/#viewing-cvm-details-managing-certificates","title":"Viewing CVM Details &amp; Managing Certificates","text":"<p>Each CVM is initialized with default certificates that are used to verify secure communication between the CVM agent and Prism. To view or manage a CVM\u2019s certificates:</p> <ol> <li> <p>Access the CVM Details Page:</p> </li> <li> <p>Navigate to the CVM list.</p> </li> <li>Click on the CVM ID to open its details page.</li> </ol> <p></p> <ol> <li> <p>Manage Certificates:</p> </li> <li> <p>Download Certificates: Retrieve the default certificates for verification and secure connections.</p> </li> <li>Revoke Certificates: Invalidate compromised or outdated certificates.</li> <li>Renew Certificates: Extend the validity of existing certificates.</li> <li>Issue New Certificates: Generate additional certificates as needed.</li> </ol> <p>Note: Default certificates are automatically loaded into the CVM during creation. Any newly issued certificates must be manually transferred to the CVM for use.</p>"},{"location":"cvms/#removing-a-cvm","title":"Removing a CVM","text":"<p>If a CVM is no longer needed, it can be removed using the following steps:</p> <ol> <li> <p>Navigate to the CVM List:</p> </li> <li> <p>Open the CVMs page.</p> </li> <li> <p>Initiate Removal:</p> </li> <li> <p>Click the Delete button next to the CVM you want to remove.</p> </li> </ol> <p></p> <ol> <li>CVM Deactivation:</li> <li>The CVM\u2019s status will change to Inactive upon removal.</li> </ol>"},{"location":"cvms/#additional-notes","title":"Additional Notes","text":"<ul> <li>CVMs provide an extra layer of security by ensuring that computations occur in a protected execution environment.</li> <li>Once a CVM is removed, its resources are deallocated, and it cannot be recovered.</li> <li>For Azure and GCP CVMs, compute resources should be selected carefully based on workload requirements to optimize cost and performance.</li> <li>Regularly update certificates to maintain secure connections.</li> </ul> <p>By following these guidelines, users can efficiently manage their Confidential Virtual Machines while maintaining a high level of security and performance.</p>"},{"location":"dashboard/","title":"Dashboard","text":"<p>The dashboard offers a summarized view of workspace elements, including users, backends, computations, and assets. It is designed to streamline data visualization and analysis and provides actionable insights through various charts and graphs. The dashboard can be found at https://prism.ultraviolet.rs and can be accessed from any modern web browser.</p>"},{"location":"dashboard/#key-features-and-insights","title":"Key Features and Insights","text":"<ol> <li> <p>User Activity and Invitation Status    The dashboard provides detailed insights into user-related metrics. A dedicated chart visualizes the invitations that were accepted, pending and those that were rejected, allowing workspaces administrators to monitor engagement levels and assess the effectiveness of user onboarding strategies.</p> </li> <li> <p>Computation Summary and Status Tracking    An important feature of the dashboard is the computation summary graph, which tracks the lifecycle of computations executed within the workspace. This graph provides both a historical overview of computations and highlights their final statuses, such as completed, failed, or in progress. This summary enables users to quickly gauge the overall performance and success rates of the system's computational tasks.</p> </li> <li> <p>CVM Operational Trends    The dashboard includes a detailed time-series chart that analyzes CVM performance. This chart displays the operational periods of the CVMs, showing when they were active and when they were shut down. By highlighting these trends, users can identify patterns, such as peak operational times or recurring downtime, and take proactive measures to optimize CVM availability.</p> </li> </ol> <p>With these metrics, the dashboard enables workspace health monitoring, identifying trends, and making informed decisions efficiently.</p> <p></p>"},{"location":"getting-started/","title":"Getting Started","text":"<p>The Prism UI gives is the easiest way to use the CoCoS system, giving the ability to use the entire prism system without interacting with the command line. It provides a convenient way to log in to the CoCoS system, creation of users, workspaces, computations, computation policies, computation invitations, certs, backends, workspace billing and updating of all this information. The UI can be found at https://prism.ultraviolet.rs. The UI is a web application and can be accessed from any modern web browser.</p>"},{"location":"getting-started/#sign-up","title":"Sign Up","text":"<p>Create a user on the ui as shown below:</p> <p>or using curl as below:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users -H \"Content-Type: application/json\" -d @- &lt;&lt;EOF\n{\n  \"name\": \"John Doe\",\n  \"credentials\": {\n    \"identity\": \"john.doe@example.com\",\n    \"secret\": \"12345678\"\n  }\n}\nEOF\n</code></pre> <p>the response is follows:</p> <pre><code>HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: /users/b88b42b3-b4a4-4003-a777-6bab443385c9\nDate: Tue, 30 Apr 2024 12:40:32 GMT\nContent-Length: 213\n\n{\"id\":\"b88b42b3-b4a4-4003-a777-6bab443385c9\",\"name\":\"John Doe\",\"credentials\":{\"identity\":\"john.doe@example.com\"},\"created_at\":\"2024-04-30T12:40:32.116252Z\",\"updated_at\":\"0001-01-01T00:00:00Z\",\"status\":\"enabled\"}\n</code></pre> <p>For more user related actions see: magistrala users</p>"},{"location":"getting-started/#login-user","title":"Login User","text":"<p>In order to login user we need to provide username and password:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users/tokens/issue -H \"Content-Type: application/json\" -d @- &lt;&lt;EOF\n{\n  \"identity\": \"john.doe@example.com\",\n  \"secret\": \"12345678\"\n}\nEOF\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 201 Created\nContent-Type: application/json\nDate: Tue, 30 Apr 2024 12:48:18 GMT\nContent-Length: 647\n\n{\"access_token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJkb21haW4iOiIiLCJleHAiOjE3MTQ0ODQ4OTgsImlhdCI6MTcxNDQ4MTI5OCwiaXNzIjoibWFnaXN0cmFsYS5hdXRoIiwic3ViIjoiIiwidHlwZSI6MCwidXNlciI6IjBkY2UyMmM2LTFhOTQtNGE4ZS1hNzAxLTE4NWE0YzM3ZGY1OCJ9.osXITQXqGHV_aewrnz0bmFzfwIjxMuPZnsSkcYxmJJrNlO9JYEVXrZHLZuS8wejGNUzHur33desq_X3REISBaA\",\"refresh_token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJkb21haW4iOiIiLCJleHAiOjE3MTQ1Njc2OTgsImlhdCI6MTcxNDQ4MTI5OCwiaXNzIjoibWFnaXN0cmFsYS5hdXRoIiwic3ViIjoiIiwidHlwZSI6MSwidXNlciI6IjBkY2UyMmM2LTFhOTQtNGE4ZS1hNzAxLTE4NWE0YzM3ZGY1OCJ9.KRWH0TTfrORMrjCsfxKw4P6TO4z0Pr3DXilLttwQCiMF6kKy-8sbNz5n2VNjkAIonm-LgIN-qz64l6--a78NjQ\"}\n</code></pre> <p>A user can also register/create an account using the UI by clicking the Register button which prompts the user for a username, email, and password. After which, the user is free to create workspaces and manage their created system. </p>"},{"location":"getting-started/#create-a-workspace","title":"Create a workspace","text":"<pre><code>curl -sSiX POST https://prism.ultraviolet.rs/auth/domains/ -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"workspace 1\",\n  \"alias\": \"proj1\"\n}\nEOF\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nDate: Tue, 30 Apr 2024 13:17:33 GMT\nContent-Length: 235\n\n{\"id\":\"fda88db8-97e1-4560-8db1-29e8a40b5d0c\",\"name\":\"workspace 1\",\"alias\":\"org1\",\"status\":\"enabled\",\"created_by\":\"0dce22c6-1a94-4a8e-a701-185a4c37df58\",\"created_at\":\"2024-04-30T13:17:32.884558Z\",\"updated_at\":\"0001-01-01T00:00:00Z\"}\n</code></pre> <p>The workspaces page gives the user the ability to either create an entirely new workspace or join an existing workspace. The user can also view the workspace they are a part of and the workspace they have created.</p> <p>On the ui the steps are as follows:  </p>"},{"location":"getting-started/#project-login","title":"Project Login","text":"<p>To log in to a Workspace:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users/tokens/refresh -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_refresh_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"domain_id\": \"&lt;workspace_id&gt;\"\n}\nEOF\n</code></pre> <p>Example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users/tokens/refresh -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_refresh_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"domain_id\": \"b19c8738-0efa-400e-aaf0-610ef42f1ee1\"\n}\nEOF\n</code></pre> <p>Resopnse:</p> <pre><code>HTTP/1.1 201 Created\nContent-Length: 715\nContent-Type: application/json\nDate: Thu, 10 Aug 2023 07:25:06 GMT\nX-Frame-Options: DENY\nX-Xss-Protection: 1; mode=block\n\n{\n  \"access_token\": \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2OTE2NTQxMDYsImlhdCI6MTY5MTY1MjMwNiwiaWRlbnRpdHkiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsImlzcyI6ImNsaWVudHMuYXV0aCIsInN1YiI6IjFiODQ5YTk5LWNlZjctNDJmNS1hN2Y0LWUwMGIxZjQzOWUwOCIsInR5cGUiOiJhY2Nlc3MifQ.FRaSjJT7wZVPSW6w-O3jyQa9WekLUzp6WcdakrZuvFgTsPvo29tbCNsX71ktJkwKeQUK1CPwRQrWrEu8tAOKFg\",\n  \"refresh_token\": \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2OTE3Mzg3MDYsImlhdCI6MTY5MTY1MjMwNiwiaWRlbnRpdHkiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsImlzcyI6ImNsaWVudHMuYXV0aCIsInN1YiI6IjFiODQ5YTk5LWNlZjctNDJmNS1hN2Y0LWUwMGIxZjQzOWUwOCIsInR5cGUiOiJyZWZyZXNoIn0.iGpKn5FrTknYeuxqIxMd8x40MnExgaUJ1iWJ9Vg5szoShM-M6hu-Q1bNMcZQJoS4wxswGc50JzOjd7JSIYnucg\",\n  \"access_type\": \"Bearer\"\n}\n</code></pre> <p>For the UI click enter to log in to workspace with will bring you to the dashboard. </p>"},{"location":"getting-started/#cvms","title":"CVMs","text":""},{"location":"getting-started/#creating-a-cvm","title":"Creating a CVM","text":"<p>CVMs are used to run computations. We need to create one and start it before we are able to run a computation.</p> <p></p> <p>Please wait as the cvm is being created. </p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/backends/backend -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"my dell server\",\n  \"description\": \"\",\n  \"address\": \"192.168.100.4\"\n}\nEOF\n</code></pre> <p>response</p> <pre><code>HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: /backends/fde3263e-70b8-4ce9-9f3c-4a203a0dcdf5\nDate: Thu, 02 May 2024 10:15:35 GMT\nContent-Length: 0\n</code></pre>"},{"location":"getting-started/#issuing-a-certificate","title":"Issuing a Certificate","text":"<p>CVMs connect via gRPC secured with mTLS. Certificates are issued at CVM creation. When needed new certificates can be issued.</p> <p></p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/certs/issue/backend/&lt;backend_id&gt; -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"ip_addresses\": []\n}\nEOF\n</code></pre> <p>example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/certs/issue/backend/fde3263e-70b8-4ce9-9f3c-4a203a0dcdf5 -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"ip_addresses\": [\"192.168.100.4\"]\n}\nEOF\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 201 Created\nContent-Type: application/json\nDate: Thu, 02 May 2024 11:35:37 GMT\nContent-Length: 59\n\n{\"serial_number\":\"75709155906162784911683514578929321876\"}\n</code></pre>"},{"location":"getting-started/#download-certificate","title":"Download Certificate","text":"<p>First we'll request a download token:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/certs/&lt;serial_number&gt;/download/token -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p></p> <p>response:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDate: Thu, 02 May 2024 11:46:11 GMT\nContent-Length: 164\n\n{\"token\":\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTQ2NTA2NzEsImlzcyI6IlVsdHJhdmlvbGV0Iiwic3ViIjoiY2VydHMifQ.4njH2KAz-qxzuaFkVx3WLQNuRTUdoKBTvlbG11oM7Yg\"}\n</code></pre> <p>With the token we can then download the cert. Please note that the token is short lived and must be used before expiry.</p> <pre><code>curl -L -X GET https://prism.ultraviolet.rs/certs/&lt;serial_number&gt;/download -G -d \"token=&lt;download_token&gt;\" --output &lt;filename&gt;.zip\n</code></pre> <p>example:</p> <pre><code>curl -L -X GET https://prism.ultraviolet.rs/certs/75709155906162784911683514578929321876/download -G -d \"token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTQ2NTIzMTYsImlzcyI6IlVsdHJhdmlvbGV0Iiwic3ViIjoiY2VydHMifQ.lvFgVSKAyn2UNeJg1OA4fGxDDZ6pylZTn9UZhrfWR9I\" --output certs.zip\n</code></pre> <p></p> <p>This results in three files <code>ca.pem</code>, <code>cert.pem</code> and <code>key.pem</code> which we'll use with CoCo's manager to bring the backend online.</p>"},{"location":"getting-started/#connect-backend","title":"Connect backend","text":"<p>To connect a backend we need to start manager. Follow the getting started guide on cocos to get up to speed. We'll then run manager to connect the backend.</p> <p>example:</p> <pre><code>MANAGER_GRPC_URL=prism.ultraviolet.rs:7011 MANAGER_LOG_LEVEL=debug MANAGER_QEMU_USE_SUDO=false  MANAGER_QEMU_ENABLE_SEV=false MANAGER_QEMU_SEV_CBITPOS=51 MANAGER_QEMU_OVMF_CODE_FILE=/usr/share/edk2/x64/OVMF_CODE.fd MANAGER_QEMU_OVMF_VARS_FILE=/usr/share/edk2/x64/OVMF_VARS.fd MANAGER_QEMU_ENABLE_SEV_SNP=false MANAGER_GRPC_CLIENT_CERT=cert.pem MANAGER_GRPC_CLIENT_KEY=key.pem MANAGER_GRPC_SERVER_CA_CERTS=ca.pem go run main.go\n</code></pre> <p>Once manager is connected we should notice the associated backend marked as active: This can be viewed by:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/backends/&lt;backend_id&gt; -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDate: Thu, 02 May 2024 12:59:15 GMT\nContent-Length: 110\n\n{\"id\":\"fde3263e-70b8-4ce9-9f3c-4a203a0dcdf5\",\"name\":\"my dell server\",\"address\":\"192.168.100.4\",\"active\":true}\n</code></pre> <p></p>"},{"location":"getting-started/#computations","title":"Computations","text":"<p>For computation management, we use Computations micorservice. By default, this service will be running on the port <code>9000</code>.</p>"},{"location":"getting-started/#create-computation","title":"Create Computation","text":"<p>In order to create computation, we can to provide the following content:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/computations -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"[name]\",\n  \"description\": \"[description]\",\n  \"datasets\": [\n    \"&lt;dataset_1&gt;\", ..., \"[dataset_n]\"\n  ],\n  \"algorithm\": {\"id\":&lt;id&gt;, \"provider\":&lt;provider&gt;, \"hash\":&lt;hash&gt;}\n}\nEOF\n</code></pre> <p>Example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/computations -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"Machine Diagnostics Analysis\",\n  \"description\": \"Performing diagnostics analysis on machine data\",\n  \"backend_id\": \"fde3263e-70b8-4ce9-9f3c-4a203a0dcdf5\",\n  \"agent_config\": {\n    \"log_level\": \"debug\"\n  }\n}\nEOF\n</code></pre> <p>Response:</p> <pre><code>HTTP/1.1 201 Created\nContent-Type: application/json\nLocation: /computations/240be921-5758-4ffa-9ed3-97e6e72e97ea\nDate: Thu, 02 May 2024 14:29:22 GMT\nContent-Length: 0\n</code></pre> <p> Running a computation requires the following items:</p> Item User User Role Computation Asset Public Key Additional Information Algorithm Required Algorithm Provider Algorithm Required Algorithms are required because they will be executed in TEE. Dataset Optional Dataset Provider Dataset Required Datasets are optional because some algorithms do not require training datasets. Result Consumer Require Result Consumer - Required Result consumers are required because they are the users that can retrieve results after successful computation run. <p>Public keys are mandatory because they are needed for user identification when uploading algorithm and datasets and when retrieving results. Therefore, users need to generate public/private key pairs and upload their public keys.</p> <p>Users invited to a workspace:</p> <ol> <li>need to be assigned user roles in the computation by the computation owner or admin.</li> <li>need to create computation assets respective to their roles i.e. an algorithm provider needs to create an algorithm asset.</li> <li>need to link all the required assets to the computation.</li> <li>need to their private key for uploading assets and retrieving results.</li> </ol> <p>These steps have been explained in the sections below.</p>"},{"location":"getting-started/#assigning-computation-roles-and-permissions","title":"Assigning Computation Roles and Permissions","text":"<ol> <li> <p>Navigate to the roles page from the computation details page.    </p> </li> <li> <p>Select a role to which you would like to add a user.    Please note that this user needs to be invited to a workspace and to have accepted the invitation.    </p> </li> <li> <p>Switch to the members tab and click on the Add Members button.    </p> </li> <li> <p>Search for the user you'd like to assign a role.</p> </li> <li> <p>Select the user from the list and click on Add Selected Members button.    </p> </li> <li> <p>Upon successful role assignment, the user will appear on the role details page.    </p> </li> </ol>"},{"location":"getting-started/#linking-computation-assets","title":"Linking Computation Assets","text":"<p>The assigned users from the previous step need to create and link their respective assets to the computation that they are assigned. This can be done as follows:</p> <ol> <li> <p>Navigate to assets page and create a new asset.    </p> </li> <li> <p>A successfully created asset will appear in the assets page.    </p> </li> <li> <p>Search for the computation by name and link the asset.    </p> </li> <li> <p>Repeat the steps for all the assets that are needed to run the computation.</p> </li> </ol>"},{"location":"getting-started/#run-computation","title":"Run Computation","text":"<p>Next we'll run the computation:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/computations/&lt;computation_id&gt;/run -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>response:</p> <pre><code>HTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 03 May 2024 08:37:24 GMT\nContent-Length: 0\n</code></pre> <p>Notice the run button is disabled until all the requirements are met: </p> <p>Once the requirements are satisfied, run computation button is enabled. </p> <p>Once you click run computation, you will be required to select a CVM on which to run the computation: </p> <p>This will result in events and logs from agent and manager visible on the ui. </p>"},{"location":"getting-started/#stop-computation-run","title":"Stop Computation Run","text":"<p>To stop a computation run at any point, click the Stop button on the event's card. The card contains the details and list of events related to the current computation run. Once the run is stopped, the button will be hidden.</p> <p></p> <p>The Stop button can also be found in the Logs tab, on each card.</p> <p></p>"},{"location":"roles/","title":"Roles","text":""},{"location":"roles/#computation-roles","title":"Computation Roles","text":"<p>Computation roles are used to manage user actions to a computation. On service start, builtin roles are created with their associated actions which can be assigned to a user on a particular computation. These builtin roles can be updated, deleted, and new ones added.</p> <p>The following builtin roles are created on service initialization:</p> Built-in Role Actions Owner view, edit, run, administrator AlgorithmProvider view, algo_provider DatasetProvider view, dataset_provider ResultConsumer view, result_consumer Viewer view Editor view, edit Runner view, run <p>Here\u2019s an enhanced version of your Role Management documentation with additional explanations and clarity:</p>"},{"location":"roles/#role-management","title":"Role Management","text":""},{"location":"roles/#overview","title":"Overview","text":"<p>Role management is a critical component of access control in computations. Each role defines a set of actions a user is permitted to perform, ensuring that users have only the necessary actions for their responsibilities.</p> <p>A key constraint in the role system is that a user can only belong to a single role at a time. If multiple actions from different roles are required (e.g., both algo_provider and dataset_provider), an existing builtin role can be updated to include these actions, or a new custom role can be created with those combined actions.</p> <p>Builtin roles provide the most basic roles with single actions that can be updated or added depending on the user's requirements.</p>"},{"location":"roles/#role-purpose-in-computation-manifest","title":"Role Purpose in Computation Manifest","text":"<p>Roles are essential in governing who can interact with a computation and how. In the computation manifest, assigned roles determine access to various resources, such as datasets, algorithms, and execution actions. Each role is mapped to a set of predefined actions that enforce security and operational boundaries within a computation.</p>"},{"location":"roles/#accessing-role-management","title":"Accessing Role Management","text":"<p>To manage roles, follow these steps:</p> <ol> <li>Navigate to the Computations page.</li> <li>Click the New Computation button to create a computation.</li> <li>After creation, open the computation's Details page.</li> <li>Click the Roles button to manage user roles.</li> </ol> <p></p> <p>Clicking the Roles button will display all predefined built-in roles and their associated actions.</p> <p></p>"},{"location":"roles/#built-in-roles-and-their-actions","title":"Built-in Roles and Their Actions","text":"<p>The system provides predefined built-in roles, each granting specific access levels. The available built-in roles and their associated actions are:</p> Built-in Role Actions Description Owner view, edit, run, administrator Full control over the computation, including modifying roles and actions. AlgorithmProvider view, algo_provider Provides algorithms but cannot edit or run computations. DatasetProvider view, dataset_provider Provides datasets but cannot edit or execute computations. ResultConsumer view, result_consumer Can view results but cannot modify or execute computations. Viewer view Read-only access. Editor view, edit Can modify computations but cannot execute them. Runner view, run Can execute computations but cannot modify them."},{"location":"roles/#explanation-of-actions","title":"Explanation of Actions","text":"<p>Each action in a role defines what the user can do:</p> <ul> <li>view \u2013 Allows the user to see computation details but not modify them.</li> <li>edit \u2013 Grants the ability to modify computation properties.</li> <li>run \u2013 Enables execution of a computation.</li> <li>administrator \u2013 Provides full control, including role management.</li> <li>algo_provider \u2013 Allows the user to contribute and manage algorithms.</li> <li>dataset_provider \u2013 Allows the user to contribute and manage datasets.</li> <li>result_consumer \u2013 Enables access to computation results.</li> </ul>"},{"location":"roles/#managing-roles","title":"Managing Roles","text":""},{"location":"roles/#creating-a-role","title":"Creating a Role","text":"<p>To create a role, the following steps can be followed.</p> <ol> <li>Click the Create Role button.</li> <li>Define the role name and select the required actions.</li> <li>Save the role to make it available for assignment.</li> </ol> <p></p>"},{"location":"roles/#updating-a-role","title":"Updating a Role","text":"<p>Existing roles can be modified if actions need to be adjusted.</p> <ol> <li>Click the Update Role button next to the role.</li> <li>Modify the role\u2019s name or actions.</li> <li>Save the changes to update the role.</li> </ol> <p> </p>"},{"location":"roles/#viewing-role-details","title":"Viewing Role Details","text":"<p>To see details about a role, including its assigned actions and members, click the View Role button.</p> <p></p> <p>This will display:</p> <ul> <li>Role Actions \u2013 The actions assigned to the role.</li> <li>Role Members \u2013 A list of users assigned to this role.</li> </ul> <p> </p>"},{"location":"roles/#managing-users-in-roles","title":"Managing Users in Roles","text":""},{"location":"roles/#adding-a-user-to-a-role","title":"Adding a User to a Role","text":"<p>Since a user can only have one role at a time, ensure that the assigned role includes all necessary actions.</p> <ol> <li>Click the Add Members button.</li> <li>Select users to assign to the role.</li> <li>Confirm the selection.</li> </ol> <p> </p>"},{"location":"roles/#removing-a-user-from-a-role","title":"Removing a User from a Role","text":"<p>To revoke access, remove a user from a role:</p> <ol> <li>Navigate to the role\u2019s details page.</li> <li>Locate the user in the Role Members section.</li> <li>Click the Remove button.</li> </ol> <p></p>"},{"location":"roles/#deleting-a-role","title":"Deleting a Role","text":"<p>Roles that are no longer needed can be removed. Note: Deleting a role will revoke access for all assigned users.</p> <ol> <li>Click the Delete Role button next to the role.</li> <li>Confirm the deletion.</li> </ol> <p></p>"},{"location":"users/","title":"Users","text":""},{"location":"users/#create-user","title":"Create User","text":"<p>Identity, which can be email-address (this must be unique as it identifies the user) and secret (password must contain at least 8 characters)</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users -H \"Content-Type: application/json\" [-H \"Authorization: Bearer &lt;user_token&gt;\"] -d @- &lt;&lt;EOF\n{\n  \"name\": \"[name]\",\n  \"credentials\": {\n    \"identity\": \"&lt;identity&gt;\",\n    \"secret\": \"&lt;secret&gt;\"\n  },\n  \"tags\": [\n    \"[tag_1]\", ..., \"[tag_N]\"\n  ],\n  \"owner\": \"[owner_id]\",\n  \"metadata\": {},\n  \"status\": \"[status]\",\n  \"role\": \"[role]\"\n}\nEOF\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"[John Doe]\",\n  \"credentials\": {\n    \"identity\": \"john.doe@email.com\",\n    \"secret\": \"12345678\"\n  }\n}\nEOF\nHTTP/1.1 201 Created\nContent-Type: application/json\nLocation: /users/e6c6b6dd-8fb0-4ea6-ae7d-118424ce0006\nDate: Fri, 24 May 2024 07:28:32 GMT\nContent-Length: 212\n\n{\n  \"id\":\"e6c6b6dd-8fb0-4ea6-ae7d-118424ce0006\",\n  \"name\":\"[John Doe]\",\n  \"credentials\": {\"identity\":\"john.doe@email.com\"},\n  \"created_at\":\"2024-05-24T07:28:32.449035Z\",\n  \"updated_at\":\"0001-01-01T00:00:00Z\",\n  \"status\":\"enabled\"\n}\n</code></pre> <p>You can also use <code>&lt;user_token&gt;</code> so that the owner of the new user is the one identified by the <code>&lt;user_token&gt;</code> for example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt;EOF\n{\n  \"name\": \"[John Doe]\",\n  \"credentials\": {\n    \"identity\": \"john.doe@email.com\",\n    \"secret\": \"12345678\"\n  }\n}\nEOF\n\nHTTP/1.1 201 Created\nContent-Type: application/json\nLocation: /users/75db22d5-7925-4e90-8ffb-919c6fa2d8c2\nDate: Fri, 24 May 2024 07:31:18 GMT\nContent-Length: 215\n\n{\n  \"id\": \"47887629-7b4c-4bf5-b414-35bb2a5f5f23\",\n  \"name\": \"John Doe\",\n  \"owner\": \"11a2a5ba-723a-4b6d-8a5d-0c679efbf283\",\n  \"credentials\": { \"identity\": \"john.doe@email.com\" },\n  \"created_at\": \"2023-08-10T07:55:08.056426Z\",\n  \"updated_at\": \"0001-01-01T00:00:00Z\",\n  \"status\": \"enabled\"\n}\n</code></pre> <p>On ui this can be done as follows;</p> <p>Navigate to the landing page and click the Register button: </p> <p>On the registration form, provide the following required details:</p> <ul> <li>Username</li> <li>Email Address</li> <li>First and Last Names</li> <li>Password </li> </ul>"},{"location":"users/#create-token","title":"Create Token","text":"<p>To log in to the Mainflux system, you need to create a <code>user_token</code>.</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users/tokens/issue -H \"Content-Type: application/json\" -d @- &lt;&lt;EOF\n{\n  \"identity\": \"&lt;user_identity&gt;\",\n  \"secret\": \"&lt;user_secret&gt;\"\n}\nEOF\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users/tokens/issue -H \"Content-Type: application/json\" -d @- &lt;&lt;EOF\n{\n  \"identity\": \"johndoe@email.com\",\n  \"secret\": \"12345678\"\n}\nEOF\n\nHTTP/1.1 201 Created\nContent-Type: application/json\nDate: Fri, 24 May 2024 07:36:20 GMT\nContent-Length: 591\n\n{\n  \"access_token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTY1Mzk3ODAsImlhdCI6MTcxNjUzNjE4MCwiaXNzIjoibWFnaXN0cmFsYS5hdXRoIiwidHlwZSI6MCwidXNlciI6ImU2YzZiNmRkLThmYjAtNGVhNi1hZTdkLTExODQyNGNlMDAwNiJ9.QWX7IBCWLOcWaerOkZ0XAQlOq-jLEgqXttP4S1qEooky-LWeAMHBHKszjR7LoaVoCBcmuqbuKL0vrgNV25OPfg\",\n  \"refresh_token\":\"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MTY2MjI1ODAsImlhdCI6MTcxNjUzNjE4MCwiaXNzIjoibWFnaXN0cmFsYS5hdXRoIiwidHlwZSI6MSwidXNlciI6ImU2YzZiNmRkLThmYjAtNGVhNi1hZTdkLTExODQyNGNlMDAwNiJ9.Wl9lc5Mx9Tu-LVFoBg5StNi7s730r0vPSiSvapsW8IgL1jIEPRyvNxEaxbPSYxxK8xB61NNnkkPVxoPVhSKk_g\"\n}\n\n</code></pre>"},{"location":"users/#refresh-token","title":"Refresh Token","text":"<p>To issue another <code>access_token</code> after getting expired, you need to use a <code>refresh_token</code>.</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users/tokens/refresh -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;refresh_token&gt;\"\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/users/tokens/refresh -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;refresh_token&gt;\"\n\n\nHTTP/1.1 201 Created\nContent-Length: 709\nContent-Type: application/json\nDate: Thu, 10 Aug 2023 07:55:20 GMT\nX-Frame-Options: DENY\nX-Xss-Protection: 1; mode=block\n\n{\n  \"access_token\": \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2OTE2NTQ4NDAsImlhdCI6MTY5MTY1MzA0MCwiaWRlbnRpdHkiOiJqb2huLmRvZUBlbWFpbC5jb20iLCJpc3MiOiJjbGllbnRzLmF1dGgiLCJzdWIiOiIyNDZhY2VlOC0wYmM0LTRiMmUtOWYyYy0zZmRlZTM3NzZkNDUiLCJ0eXBlIjoiYWNjZXNzIn0.Sn4r41hl1pBFjm95UCr23hGabgq62cxNV882EiV8RMZqv92RJYMcm27KFCcR6fN07jMTXFVr_DDxc9be1HAXgw\",\n  \"refresh_token\": \"eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2OTE3Mzk0NDAsImlhdCI6MTY5MTY1MzA0MCwiaWRlbnRpdHkiOiJqb2huLmRvZUBlbWFpbC5jb20iLCJpc3MiOiJjbGllbnRzLmF1dGgiLCJzdWIiOiIyNDZhY2VlOC0wYmM0LTRiMmUtOWYyYy0zZmRlZTM3NzZkNDUiLCJ0eXBlIjoicmVmcmVzaCJ9.As2C8mCp2BaSdm5yp5OUMNiJ7gHJT472e-L7T80xVHhrqDMBvsom7o4_RfP1z7A2sHrkA4ozU4B-FUSaSeG32A\",\n  \"access_type\": \"Bearer\"\n}\n</code></pre> <p>Issuing and refreshing the user token is done automatically on UI when you log in to your account. This can be done as follows:</p> <ol> <li>Navigate to the login page:</li> </ol> <p></p> <ol> <li>Enter your email and password, and click login.</li> </ol> <p>This will direct you to the workspaces page at which point you can select the workspace to log in to and proceed with using Prism.</p> <p></p>"},{"location":"users/#get-user-profile","title":"Get User Profile","text":"<pre><code>curl -sSiX GET https://prism.ultraviolet.rs/users/profile -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/users/profile -H \"Authorization: Bearer &lt;user_token&gt;\"\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 24 May 2024 07:43:00 GMT\nContent-Length: 212\n\n{\n  \"id\":\"e6c6b6dd-8fb0-4ea6-ae7d-118424ce0006\",\n  \"name\":\"[John Doe]\",\n  \"credentials\":{\"identity\":\"john.doe@email.com\"},\n  \"created_at\":\"2024-05-24T07:28:32.449035Z\",\n  \"updated_at\":\"0001-01-01T00:00:00Z\",\n  \"status\":\"enabled\"\n}\n</code></pre> <p>On the UI this can be done as follows:</p> <ul> <li> <p>Once logged in, click on your User Profile icon located at the top-right corner of the page:   </p> </li> <li> <p>From the dropdown menu, select the My Account option. This will redirect you to your Profile Page:   </p> </li> </ul>"},{"location":"users/#steps-to-view-and-update-user-information","title":"Steps to View and Update User Information","text":""},{"location":"users/#1-profile-page-overview","title":"1. Profile Page Overview","text":"<ul> <li>On the profile page, you can:</li> <li>View a summary of your account details.</li> <li>Access options to update your information or deactivate your account.</li> </ul>"},{"location":"users/#2-updating-user-details","title":"2. Updating User Details","text":"<p>To modify your information, click the Update icon on the profile page: </p> <p>On the resulting update page, you can edit any of the following fields as needed:</p> <ul> <li>Username</li> <li>Email Address</li> <li>First and Last Names</li> <li>Password   </li> </ul>"},{"location":"users/#3-disabling-a-user","title":"3. Disabling a User","text":"<ul> <li>To deactivate your account, you must first manage any associated entities:</li> <li>Delete all associated entities, OR</li> <li>Transfer ownership of these entities to another registered user.</li> </ul> <p>Note: Once all associated entities are resolved, you can proceed with account deactivation through the options provided on the profile page.</p>"},{"location":"workspaces/","title":"Workspaces","text":"<p>Workspaces represent a consortium of users, computations, and resources that provides a single way to allow management of resources in the system. The workspaces / workspaces simplify access control by allowing only users who are in a particular workspace to access resources which they have been assigned to.</p> <p>Within workspaces, different users have different roles that allow them to only perform certain operations within the workspace, such as creation of other users and other admin related tasks. A single user can belong to multiple workspaces, with which they can have different roles based on the policy assigned.</p> <p>For any user to access the CoCoS system, they must be part of an workspace, and have to be signed in to the workspace.</p>"},{"location":"workspaces/#create-an-workspace","title":"Create an workspace","text":"<pre><code>curl -sSiX POST https://prism.ultraviolet.rs/auth/domains/ -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"workspace 1\",\n  \"alias\": \"org1\"\n}\nEOF\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/auth/domains/ -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"workspace 1\",\n  \"alias\": \"org1\"\n}\nEOF\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nDate: Tue, 30 Apr 2024 13:17:33 GMT\nContent-Length: 235\n\n{\n  \"id\":\"fda88db8-97e1-4560-8db1-29e8a40b5d0c\",\n  \"name\":\"workspace 1\",\n  \"alias\":\"org1\",\n  \"status\":\"enabled\",\n  \"created_by\":\"0dce22c6-1a94-4a8e-a701-185a4c37df58\",\n  \"created_at\":\"2024-04-30T13:17:32.884558Z\",\n  \"updated_at\":\"0001-01-01T00:00:00Z\"\n}\n</code></pre> <p>On the ui the steps are as follows:</p> <ol> <li>Log in to prism platform with a user with administrator permission.</li> <li>On successfully log in, workspaces page is displayed. Click on 'New Project'.    </li> <li>Fill the required fields and click 'Create Project'    </li> </ol>"},{"location":"workspaces/#update-workspace","title":"Update workspace","text":"<p>Update workspace</p> <pre><code>curl -sSiX PUT https://prism.ultraviolet.rs/auth/domains/&lt;workspace_id&gt; -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"workspace 1\",\n  \"alias\": \"org1\"\n}\nEOF\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX PATCH https://prism.ultraviolet.rs/auth/domains/127910df-7eca-42dc-a625-1f8fda70229c -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"name\": \"workspace 1\",\n  \"alias\": \"org1\"\n}\nEOF\nHTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 24 May 2024 06:28:08 GMT\nContent-Length: 294\n\n{\n  \"id\":\"127910df-7eca-42dc-a625-1f8fda70229c\",\n  \"name\":\"workspace 1\",\n  \"alias\":\"org1\",\n  \"status\":\"enabled\",\n  \"created_by\":\"c7a1374c-b6e1-4cfd-b333-696bec0c672d\",\n  \"created_at\":\"2024-05-24T05:29:47.030197Z\",\n  \"updated_by\":\"c7a1374c-b6e1-4cfd-b333-696bec0c672d\",\n  \"updated_at\":\"2024-05-24T06:28:08.121207Z\"\n}\n</code></pre> <p>On the ui the steps are as follows:</p> <ol> <li> <p>Click on 'Workspaces' on the navigation panel to view workspace details.    </p> </li> <li> <p>Click on 'Update Project' to navigate to the update workspace page.</p> </li> <li>Make necessary changes and click 'update'    </li> </ol>"},{"location":"workspaces/#get-workspace","title":"Get workspace","text":"<pre><code>curl -isSX GET https://prism.ultraviolet.rs/auth/domains/&lt;workspace_id&gt; -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/auth/domains/127910df-7eca-42dc-a625-1f8fda70229c -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 24 May 2024 06:32:29 GMT\nContent-Length: 294\n\n{\n  \"id\":\"127910df-7eca-42dc-a625-1f8fda70229c\",\n  \"name\":\"workspace 1\",\n  \"alias\":\"org1\",\n  \"status\":\"enabled\",\n  \"created_by\":\"c7a1374c-b6e1-4cfd-b333-696bec0c672d\",\n  \"created_at\":\"2024-05-24T05:29:47.030197Z\",\n  \"updated_by\":\"c7a1374c-b6e1-4cfd-b333-696bec0c672d\",\n  \"updated_at\":\"2024-05-24T06:28:08.121207Z\"\n}\n</code></pre> <p>On the ui the steps are as follows:</p> <ol> <li>Click on 'Workspaces' on the navigation panel to view workspace details.    </li> </ol>"},{"location":"workspaces/#get-workspaces","title":"Get workspaces","text":"<p>To paginate the results, use <code>offset</code>, <code>limit</code>, <code>metadata</code>, <code>name</code>, <code>status</code>, <code>parentID</code>, <code>ownerID</code>, <code>tree</code> and <code>dir</code> as query parameters.</p> <pre><code>curl -isSX GET https://prism.ultraviolet.rs/auth/domains/ -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX GET https://prism.ultraviolet.rs/auth/domains/ -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nDate: Fri, 24 May 2024 06:32:59 GMT\nContent-Length: 898\n\n{\n  \"total\":3,\n  \"offset\":0,\n  \"limit\":10,\n  \"domains\": [\n    {\n      \"id\":\"2c8f3651-eb61-4a2d-8473-a84ae7a94845\",\n      \"name\":\"Test Org2\",\n      \"alias\":\"Desc 2\",\n      \"status\":\"enabled\",\n      \"permission\":\"administrator\",\n      \"created_by\":\"c7a1374c-b6e1-4cfd-b333-696bec0c672d\",\n      \"created_at\":\"2024-05-24T05:37:43.870852Z\",\n      \"updated_at\":\"0001-01-01T00:00:00Z\"\n    },\n    {\n      \"id\":\"f5bc07b4-bdc1-426f-8d18-d625bb5da8ac\",\n      \"name\":\"Another Org\",\n      \"alias\":\"Desc 2\",\n      \"status\":\"enabled\",\n      \"permission\":\"administrator\",\n      \"created_by\":\"c7a1374c-b6e1-4cfd-b333-696bec0c672d\",\n      \"created_at\":\"2024-05-24T05:47:32.275316Z\",\n      \"updated_at\":\"0001-01-01T00:00:00Z\"\n    },\n    {\"id\":\"127910df-7eca-42dc-a625-1f8fda70229c\",\n    \"name\":\"workspace 1\",\n    \"alias\":\"org1\",\n    \"status\":\"enabled\",\n    \"permission\":\"administrator\",\n    \"created_by\":\"c7a1374c-b6e1-4cfd-b333-696bec0c672d\",\n    \"created_at\":\"2024-05-24T05:29:47.030197Z\",\n    \"updated_by\":\"c7a1374c-b6e1-4cfd-b333-696bec0c672d\",\n    \"updated_at\":\"2024-05-24T06:28:08.121207Z\"\n    }\n  ]\n}\n</code></pre> <p>On the ui the steps are as follows:</p> <ol> <li>Click on user profile at the top right, then click on \"Switch Workspaces\" on the menu. This navigates to the workspaces page.    </li> <li>Project page is displayed.    </li> </ol>"},{"location":"workspaces/#assign","title":"Assign","text":"<p>Assign user to an workspace</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/auth/domains/&lt;workspace_id&gt;/members -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"subject\": \"&lt;user_id&gt;\",\n  \"object\": \"&lt;workspace_id&gt;\",\n  \"relation\": [\"&lt;relations&gt;\"]\n}\nEOF\n</code></pre> <p>For example:</p> <pre><code>curl -sSiX POST https://prism.ultraviolet.rs/auth/domains/127910df-7eca-42dc-a625-1f8fda70229c/users/assign -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\" -d @- &lt;&lt; EOF\n{\n  \"relation\": \"member\",\n  \"user_ids\": [\"1470462e-70d3-4e3f-82d8-7df5ad643de3\"]\n}\nEOF\n\nHTTP/1.1 201 Created\nContent-Type: application/json\nDate: Fri, 24 May 2024 06:51:37 GMT\nContent-Length: 0\n\n</code></pre> <p>On the ui the steps are as follows:</p> <ol> <li> <p>From Project details page, click on 'Members'. This navigates to Members page.    </p> </li> <li> <p>From Member page, click on 'Assign Member'. A modal dialog will appear that allowing member relation assignment.    </p> </li> </ol>"},{"location":"workspaces/#members","title":"Members","text":"<p>To paginate the results, use <code>offset</code>, <code>limit</code>, <code>metadata</code>, <code>name</code>, <code>status</code>, <code>parentID</code>, <code>ownerID</code>, <code>tree</code> and <code>dir</code> as query parameters.</p> <p>Must take into consideration the user identified by the <code>user_token</code> needs to be assigned to the same workspace identified by <code>group_id</code> with <code>g_list</code> action or be the owner of the workspace identified by <code>group_id</code>.</p> <pre><code>curl -isSX GET https://prism.ultraviolet.rs/auth/domains/&lt;workspace_id&gt;/users -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n</code></pre> <p>For example:</p> <pre><code> curl -sSiX GET https://prism.ultraviolet.rs/auth/domains/ec7f6b62-3b0b-4f6f-925f-c1f09ab2f883/users\\?permission\\=view -H \"Content-Type: application/json\" -H \"Authorization: Bearer &lt;user_token&gt;\"\n\nHTTP/1.1 200 OK\nContent-Type: application/json\nDate: Sat, 25 May 2024 08:44:49 GMT\nContent-Length: 216\n\n{\n  \"limit\":10,\n  \"offset\":0,\n  \"total\":1,\n  \"users\": [\n    {\n      \"id\":\"986a04e5-be5b-4041-b649-f64346720219\",\n      \"name\":\"John Doe\",\n      \"credentials\":{},\n      \"created_at\":\"0001-01-01T00:00:00Z\",\n      \"updated_at\":\"0001-01-01T00:00:00Z\",\n      \"status\":\"enabled\"\n    }\n  ]\n}\n</code></pre> <p>On the ui steps are as follows: On the ui, steps are as follows:</p> <ol> <li>From Project details page, click on 'Members'. This navigates to Members page.    </li> <li>Project members page is displayed.    </li> </ol>"}]}